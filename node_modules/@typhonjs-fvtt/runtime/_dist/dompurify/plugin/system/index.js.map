{"version":3,"file":"index.js","sources":["../../../../node_modules/dompurify/src/utils.js","../../../../node_modules/dompurify/src/tags.js","../../../../node_modules/dompurify/src/attrs.js","../../../../node_modules/dompurify/src/regexp.js","../../../../node_modules/dompurify/src/purify.js","../../../../.build/dompurify/DOMPurify.js","../../../../.build/dompurify/plugin/system/DOMPurify.js"],"sourcesContent":["const {\n  hasOwnProperty,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = stringToLowerCase(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  let property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n","import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\n","import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof getParentNode === 'function' &&\n    implementation &&\n    typeof implementation.createHTMLDocument !== 'undefined' &&\n    documentMode !== 9;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  const CUSTOM_ELEMENT_HANDLING = Object.seal(\n    Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks? */\n  let SANITIZE_DOM = true;\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR)\n        : DEFAULT_ALLOWED_ATTR;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR)\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS)\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? (PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE)\n        : (PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE);\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? (x) => x\n        : stringToLowerCase;\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: HTML_NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // Certain elements are allowed in both SVG and HTML\n      // namespace. We need to specify them explicitly\n      // so that they don't get erronously deleted from\n      // HTML namespace.\n      const commonSvgAndHTMLElements = addToSet({}, [\n        'title',\n        'style',\n        'font',\n        'a',\n        'script',\n      ]);\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (commonSvgAndHTMLElements[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG or MathML). Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml') {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function')\n    );\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Mitigate a problem with templates inside select */\n    if (\n      tagName === 'select' &&\n      regExpTest(/<template/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        )\n          return false;\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        )\n          return false;\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if (\n      (tagName === 'noscript' || tagName === 'noembed') &&\n      regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_basicCustomElementTest(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n  const _basicCustomElementTest = function (tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let oldNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (\n        typeof window.toStaticHTML === 'object' ||\n        typeof window.toStaticHTML === 'function'\n      ) {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n","import DOMPurify from '../../node_modules/dompurify/dist/purify.es.js';\r\n\r\n// Only allow YouTube and Vimeo embeds through.\r\nconst s_REGEX = new RegExp('^(https://www.youtube.com/embed/|https://player.vimeo.com/)');\r\n\r\n// When 'iframes' are allowed only accept ones where 'src' starts with a YouTube embed link; reject all others.\r\nDOMPurify.addHook('uponSanitizeElement', (node, data) =>\r\n{\r\n   if (data.tagName === 'iframe')\r\n   {\r\n      const src = node.getAttribute('src') || '';\r\n      if (!s_REGEX.test(src))\r\n      {\r\n         return node.parentNode.removeChild(node);\r\n      }\r\n   }\r\n});\r\n\r\n// Provide a new method that allows 'iframe' but with the 'src' requirement defined above.\r\n// FORCE_BODY allows 'style' tags to be entered into TinyMCE code editor.\r\nDOMPurify.sanitizeWithVideo = (dirty) =>\r\n{\r\n   return DOMPurify.sanitize(dirty, {\r\n      ADD_TAGS: ['iframe'],\r\n      ADD_ATTR: ['allow', 'allowfullscreen', 'frameborder', 'scrolling'],\r\n      CUSTOM_ELEMENT_HANDLING: {\r\n         tagNameCheck: /^wc-/,                  // all custom element tags starting w/ `wc-`.\r\n         attributeNameCheck: () => true,        // allow all attributes.\r\n         allowCustomizedBuiltInElements: true   // allow customized built-ins.\r\n      },\r\n      FORCE_BODY: true\r\n   });\r\n};\r\n\r\nexport { DOMPurify };","import { DOMPurify as DOMPurifyImpl } from '@typhonjs-fvtt/runtime/dompurify';\r\n\r\nexport class DOMPurify\r\n{\r\n   static sanitize(dirty)\r\n   {\r\n      return DOMPurifyImpl.sanitize(dirty);\r\n   }\r\n\r\n   static sanitizeWithVideo(dirty)\r\n   {\r\n      return DOMPurifyImpl.sanitizeWithVideo(dirty);\r\n   }\r\n\r\n   static onPluginLoad(ev)\r\n   {\r\n      const opts = { guard: true };\r\n\r\n      const prepend = typeof ev?.pluginOptions?.eventPrepend === 'string' ? `${ev.pluginOptions.eventPrepend}:` : '';\r\n\r\n      ev.eventbus.on(`${prepend}dompurify:sanitize`, this.sanitize, this, opts);\r\n      ev.eventbus.on(`${prepend}dompurify:sanitize:video`, this.sanitizeWithVideo, this, opts);\r\n   }\r\n}"],"names":["hasOwnProperty","Object","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","Reflect","apply","construct","fun","thisValue","args","x","Func","arrayForEach","unapply","Array","prototype","forEach","arrayPop","pop","arrayPush","push","stringToLowerCase","String","toLowerCase","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","regExpTest","RegExp","test","typeErrorCreate","unconstruct","TypeError","func","thisArg","addToSet","set","array","l","length","element","lcElement","clone","object","newObject","property","lookupGetter","prop","desc","get","value","fallbackValue","warn","html","svg","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","text","xml","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","document","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","getAttribute","policyName","_","createDOMPurify","DOMPurify","root","version","VERSION","removed","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","createHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","documentMode","hooks","createHTMLDocument","EXPRESSIONS","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","ATTRS","CUSTOM_ELEMENT_HANDLING","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","transformCaseFunc","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","tagNameCheck","attributeNameCheck","allowCustomizedBuiltInElements","ADD_TAGS","ADD_ATTR","table","tbody","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","parentTagName","namespaceURI","Boolean","commonSvgAndHTMLElements","_forceRemove","node","parentNode","removeChild","outerHTML","remove","_removeAttribute","name","getAttributeNode","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","call","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","textContent","attributes","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","firstElementChild","childCount","i","_basicCustomElementTest","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","forceKeepAttr","undefined","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","oldNode","returnNode","toString","toStaticHTML","appendChild","firstChild","nodeIterator","shadowroot","serializedHTML","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","DOMPurifyImpl"],"mappings":"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"}